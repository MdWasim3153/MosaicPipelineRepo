{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "AzureADFMosaicPipeline"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureBlobStorage2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage2'"
		},
		"AzureSqlDatabase1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase1'"
		},
		"BRSpectro_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'BRSpectro'"
		},
		"OnPremDatabase_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'OnPremDatabase'"
		},
		"AzureSqlDatabase1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "brazildb.database.windows.net"
		},
		"AzureSqlDatabase1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "BrazilDB"
		},
		"AzureSqlDatabase1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "user"
		},
		"BRSpectro_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "brazildb.database.windows.net"
		},
		"BRSpectro_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "BrazilDB"
		},
		"BRSpectro_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "user"
		},
		"OnPremDatabase_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "PF4WB9DF\\SQLEXP2019"
		},
		"OnPremDatabase_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "AdventureWorks2019"
		},
		"OnPremDatabase_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sa"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase1_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase1_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRSpectro')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('BRSpectro_properties_typeProperties_server')]",
					"database": "[parameters('BRSpectro_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('BRSpectro_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('BRSpectro_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremSQLData')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "Database stored on my local machine",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ICRISStgIngredient')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BRSpectro",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "FormulaId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StagingId",
						"type": "nvarchar"
					},
					{
						"name": "FormulaTalendId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Line",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ProductCode",
						"type": "nvarchar"
					},
					{
						"name": "Amount",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Deleted",
						"type": "bit"
					},
					{
						"name": "DateModifiedTalend",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "TalendId",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ICRIS_stg_Ingredient"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BRSpectro')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ICRISstgBrand')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BRSpectro",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Code",
						"type": "nvarchar"
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "Deleted",
						"type": "bit"
					},
					{
						"name": "DateModifiedTalend",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ICRIS_stg_Brand"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BRSpectro')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ICRISstgColor')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BRSpectro",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StagingId",
						"type": "nvarchar"
					},
					{
						"name": "Code",
						"type": "nvarchar"
					},
					{
						"name": "BrandCode",
						"type": "nvarchar"
					},
					{
						"name": "VariantCode",
						"type": "nvarchar"
					},
					{
						"name": "Year",
						"type": "nvarchar"
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "Use",
						"type": "bit"
					},
					{
						"name": "Red",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Green",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Blue",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Effect",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Deleted",
						"type": "bit"
					},
					{
						"name": "DateCreated",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateModified",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateModifiedTalend",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ICRIS_stg_Color"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BRSpectro')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ICRISstgFormula')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BRSpectro",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TalendId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ColorId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StagingId",
						"type": "nvarchar"
					},
					{
						"name": "QualityId",
						"type": "nvarchar"
					},
					{
						"name": "UndercoatCode",
						"type": "nvarchar"
					},
					{
						"name": "Deleted",
						"type": "bit"
					},
					{
						"name": "DateCreated",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateModified",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateModifiedTalend",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ICRIS_stg_Formula"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BRSpectro')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TableJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BRSpectro",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "source",
						"type": "nvarchar"
					},
					{
						"name": "staging",
						"type": "nvarchar"
					},
					{
						"name": "target",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tFixedFlowInput"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BRSpectro')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stgBrand')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BRSpectro",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "originated",
						"type": "varchar"
					},
					{
						"name": "description",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "stg_Brand"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BRSpectro')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stgColor')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BRSpectro",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "originated",
						"type": "varchar"
					},
					{
						"name": "universal_code",
						"type": "varchar"
					},
					{
						"name": "color_name",
						"type": "varchar"
					},
					{
						"name": "year",
						"type": "decimal",
						"precision": 4,
						"scale": 0
					},
					{
						"name": "version",
						"type": "decimal",
						"precision": 4,
						"scale": 0
					},
					{
						"name": "version_date",
						"type": "date"
					},
					{
						"name": "brand",
						"type": "varchar"
					},
					{
						"name": "effect",
						"type": "varchar"
					},
					{
						"name": "density",
						"type": "decimal",
						"precision": 8,
						"scale": 4
					},
					{
						"name": "last_update",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "stg_Color"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BRSpectro')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stgFormula')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BRSpectro",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "decimal",
						"precision": 8,
						"scale": 0
					},
					{
						"name": "originated",
						"type": "varchar"
					},
					{
						"name": "color",
						"type": "varchar"
					},
					{
						"name": "line",
						"type": "varchar"
					},
					{
						"name": "subline",
						"type": "varchar"
					},
					{
						"name": "undercoat",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "stg_Formula"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BRSpectro')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stgIngredient')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BRSpectro",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "decimal",
						"precision": 8,
						"scale": 0
					},
					{
						"name": "originated",
						"type": "varchar"
					},
					{
						"name": "product",
						"type": "varchar"
					},
					{
						"name": "amount",
						"type": "decimal",
						"precision": 8,
						"scale": 4
					},
					{
						"name": "formula",
						"type": "decimal",
						"precision": 8,
						"scale": 0
					},
					{
						"name": "ordination",
						"type": "decimal",
						"precision": 2,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "stg_Ingredient"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BRSpectro')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stgIngredientTempData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "stgIngredientTempData",
						"folderPath": "TEST",
						"container": "brdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stgProduct')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BRSpectro",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "display_id",
						"type": "varchar"
					},
					{
						"name": "originated",
						"type": "varchar"
					},
					{
						"name": "product_name",
						"type": "varchar"
					},
					{
						"name": "type",
						"type": "decimal",
						"precision": 2,
						"scale": 0
					},
					{
						"name": "used_in_formula",
						"type": "decimal",
						"precision": 1,
						"scale": 0
					},
					{
						"name": "density",
						"type": "decimal",
						"precision": 8,
						"scale": 4
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "stg_Product"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BRSpectro')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stgVariant')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BRSpectro",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "decimal",
						"precision": 8,
						"scale": 0
					},
					{
						"name": "originated",
						"type": "varchar"
					},
					{
						"name": "color",
						"type": "varchar"
					},
					{
						"name": "color_variant",
						"type": "varchar"
					},
					{
						"name": "description",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "stg_Variant"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BRSpectro')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('OnPremDatabase_properties_typeProperties_server')]",
					"database": "[parameters('OnPremDatabase_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('OnPremDatabase_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('OnPremDatabase_password')]"
					}
				},
				"connectVia": {
					"referenceName": "OnPremSQLData",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/OnPremSQLData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stgIngredientUpdateData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "stgIngredientUpdateData",
						"folderPath": "TEST",
						"container": "brdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_ProcessBrazilDataToICRIS_Brand_DF')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "stgBrand",
								"type": "DatasetReference"
							},
							"name": "stgBrand",
							"description": "Import data from Brazil stgBrand"
						},
						{
							"dataset": {
								"referenceName": "ICRISstgBrand",
								"type": "DatasetReference"
							},
							"name": "ICRISstgBrand"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ICRISstgBrand",
								"type": "DatasetReference"
							},
							"name": "InsertSink"
						},
						{
							"dataset": {
								"referenceName": "ICRISstgBrand",
								"type": "DatasetReference"
							},
							"name": "Update"
						}
					],
					"transformations": [
						{
							"name": "lookup1"
						},
						{
							"name": "CheckingBrandCodeISNULLorNOT"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id as string,",
						"          originated as string,",
						"          description as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> stgBrand",
						"source(output(",
						"          Code as string,",
						"          Name as string,",
						"          Deleted as boolean,",
						"          DateModifiedTalend as timestamp,",
						"          Id as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ICRISstgBrand",
						"stgBrand, ICRISstgBrand lookup(stgBrand@id == Code,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> lookup1",
						"lookup1 split(isNull(Code)|| trim(Code) == '',",
						"     disjoint: false) ~> CheckingBrandCodeISNULLorNOT@(row2CodeIsNull, row2CodeIsNotNull)",
						"CheckingBrandCodeISNULLorNOT@row2CodeIsNull derive(code = '0',",
						"          deleted = '0') ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Code as string,",
						"          Name as string,",
						"          Deleted as boolean,",
						"          DateModifiedTalend as timestamp,",
						"          Id as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Code = CheckingBrandCodeISNULLorNOT@row2CodeIsNull@id,",
						"          Name = description,",
						"          Deleted = derivedColumn1@deleted,",
						"          DateModifiedTalend,",
						"          Id = derivedColumn1@code",
						"     )) ~> InsertSink",
						"CheckingBrandCodeISNULLorNOT@row2CodeIsNotNull sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Code as string,",
						"          Name as string,",
						"          Deleted as boolean,",
						"          DateModifiedTalend as timestamp,",
						"          Id as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> Update"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/stgBrand')]",
				"[concat(variables('factoryId'), '/datasets/ICRISstgBrand')]"
			]
		}
	]
}