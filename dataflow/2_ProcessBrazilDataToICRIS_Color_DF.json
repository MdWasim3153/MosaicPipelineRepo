{
	"name": "2_ProcessBrazilDataToICRIS_Color_DF",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "stgColor",
						"type": "DatasetReference"
					},
					"name": "stgColor",
					"description": "Dataset for Brazil Color"
				},
				{
					"dataset": {
						"referenceName": "ICRISstgColor",
						"type": "DatasetReference"
					},
					"name": "ICRISstgColor",
					"description": "Dataset for ICRISstgColor"
				},
				{
					"dataset": {
						"referenceName": "TableJson",
						"type": "DatasetReference"
					},
					"name": "JsonFile"
				},
				{
					"dataset": {
						"referenceName": "stgVariant",
						"type": "DatasetReference"
					},
					"name": "stgVariant",
					"description": "Data from stgVariant"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ICRISstgColor",
						"type": "DatasetReference"
					},
					"name": "InsertICRISColor"
				},
				{
					"dataset": {
						"referenceName": "ICRISstgColor",
						"type": "DatasetReference"
					},
					"name": "UpdateICRISColor"
				},
				{
					"dataset": {
						"referenceName": "ICRISstgColor",
						"type": "DatasetReference"
					},
					"name": "DeleteICRISColor"
				}
			],
			"transformations": [
				{
					"name": "NewjoinstgVariant"
				},
				{
					"name": "select1"
				},
				{
					"name": "join4"
				},
				{
					"name": "select2"
				},
				{
					"name": "join5"
				},
				{
					"name": "select3"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "select4"
				},
				{
					"name": "select5"
				},
				{
					"name": "join6"
				},
				{
					"name": "select6"
				},
				{
					"name": "join7"
				},
				{
					"name": "select7"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "alterRow1"
				},
				{
					"name": "alterRow2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as string,",
				"          originated as string,",
				"          universal_code as string,",
				"          color_name as string,",
				"          year as decimal(4,0),",
				"          version as decimal(4,0),",
				"          version_date as date,",
				"          brand as string,",
				"          effect as string,",
				"          density as decimal(8,4),",
				"          last_update as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> stgColor",
				"source(output(",
				"          Id as integer,",
				"          StagingId as string,",
				"          Code as string,",
				"          BrandCode as string,",
				"          VariantCode as string,",
				"          Year as string,",
				"          Name as string,",
				"          Use as boolean,",
				"          Red as integer,",
				"          Green as integer,",
				"          Blue as integer,",
				"          Effect as integer,",
				"          Deleted as boolean,",
				"          DateCreated as timestamp,",
				"          DateModified as timestamp,",
				"          DateModifiedTalend as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ICRISstgColor",
				"source(output(",
				"          source as string,",
				"          staging as string,",
				"          target as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> JsonFile",
				"source(output(",
				"          id as decimal(8,0),",
				"          originated as string,",
				"          color as string,",
				"          color_variant as string,",
				"          description as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> stgVariant",
				"stgColor, stgVariant join(stgColor@id == color_variant,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> NewjoinstgVariant",
				"NewjoinstgVariant select(mapColumn(",
				"          {id(CLR)} = stgColor@id,",
				"          {originated(CLR)} = stgColor@originated,",
				"          {universal_code(CLR)} = universal_code,",
				"          {color_name(CLR)} = color_name,",
				"          {year(CLR)} = year,",
				"          {version(CLR)} = version,",
				"          {version_date(CLR)} = version_date,",
				"          {brand(CLR)} = brand,",
				"          {effect(CLR)} = effect,",
				"          {density(CLR)} = density,",
				"          {last_update(CLR)} = last_update,",
				"          {id(VARI)} = stgVariant@id,",
				"          {originated(VARI)} = stgVariant@originated,",
				"          {color(VARI)} = color,",
				"          {color_variant(VARI)} = color_variant,",
				"          {description(VARI)} = description",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1, ICRISstgColor join({id(CLR)} == StagingId,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join4",
				"join4 select(mapColumn(",
				"          {id(CLR)},",
				"          {originated(CLR)},",
				"          {universal_code(CLR)},",
				"          {color_name(CLR)},",
				"          {year(CLR)},",
				"          {version(CLR)},",
				"          {version_date(CLR)},",
				"          {brand(CLR)},",
				"          {effect(CLR)},",
				"          {density(CLR)},",
				"          {last_update(CLR)},",
				"          {id(VARI)},",
				"          {originated(VARI)},",
				"          {color(VARI)},",
				"          {color_variant(VARI)},",
				"          {description(VARI)},",
				"          {Id(ICRISCLR)} = Id,",
				"          {StagingId(ICRISCLR)} = StagingId,",
				"          {Code(ICRISCLR)} = Code,",
				"          {BrandCode(ICRISCLR)} = BrandCode,",
				"          {VariantCode(ICRISCLR)} = VariantCode,",
				"          {Year(ICRISCLR)} = Year,",
				"          {Name(ICRISCLR)} = Name,",
				"          {Use(ICRISCLR)} = Use,",
				"          {Red(ICRISCLR)} = Red,",
				"          {Green(ICRISCLR)} = Green,",
				"          {Blue(ICRISCLR)} = Blue,",
				"          {Effect(ICRISCLR)} = Effect,",
				"          {Deleted(ICRISCLR)} = Deleted,",
				"          {DateCreated(ICRISCLR)} = DateCreated,",
				"          {DateModified(ICRISCLR)} = DateModified,",
				"          {DateModifiedTalend(ICRISCLR)} = DateModifiedTalend",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2, JsonFile join({effect(CLR)} == source,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join5",
				"join5 select(mapColumn(",
				"          {id(CLR)},",
				"          {originated(CLR)},",
				"          {universal_code(CLR)},",
				"          {color_name(CLR)},",
				"          {year(CLR)},",
				"          {version(CLR)},",
				"          {version_date(CLR)},",
				"          {brand(CLR)},",
				"          {effect(CLR)},",
				"          {density(CLR)},",
				"          {last_update(CLR)},",
				"          {id(VARI)},",
				"          {originated(VARI)},",
				"          {color(VARI)},",
				"          {color_variant(VARI)},",
				"          {description(VARI)},",
				"          {Id(ICRISCLR)},",
				"          {StagingId(ICRISCLR)},",
				"          {Code(ICRISCLR)},",
				"          {BrandCode(ICRISCLR)},",
				"          {VariantCode(ICRISCLR)},",
				"          {Year(ICRISCLR)},",
				"          {Name(ICRISCLR)},",
				"          {Use(ICRISCLR)},",
				"          {Red(ICRISCLR)},",
				"          {Green(ICRISCLR)},",
				"          {Blue(ICRISCLR)},",
				"          {Effect(ICRISCLR)},",
				"          {Deleted(ICRISCLR)},",
				"          {DateCreated(ICRISCLR)},",
				"          {DateModified(ICRISCLR)},",
				"          {DateModifiedTalend(ICRISCLR)},",
				"          {source(JSON)} = source,",
				"          {staging(JSON)} = staging,",
				"          {target(JSON)} = target",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"select3 derive(NewDateCreated = iif(isNull({version_date(CLR)}), toDate('1900-01-01'), toDate('{version_date(CLR)}')),",
				"          NewDateModified = iif(isNull({version_date(CLR)}), toDate('1900-01-01', 'yyyy-MM-dd'), toDate('{version_date(CLR)}', 'yyyy-MM-dd')),",
				"          NewId = '0',",
				"          NewUse = 'true',",
				"          NewRed = '0',",
				"          NewBlue = '0',",
				"          NewGreen = '0',",
				"          NewDeleted = 'false') ~> derivedColumn1",
				"derivedColumn1 filter(isNull({StagingId(ICRISCLR)}) && !isNull({source(JSON)})) ~> filter1",
				"filter1 select(mapColumn(",
				"          Id = NewId,",
				"          StagingId = {id(CLR)},",
				"          Code = {universal_code(CLR)},",
				"          BrandCode = {brand(CLR)},",
				"          VariantCode = {description(VARI)},",
				"          Year = {year(CLR)},",
				"          Name = {color_name(CLR)},",
				"          Use = NewUse,",
				"          Red = NewRed,",
				"          Green = NewGreen,",
				"          Blue = NewBlue,",
				"          Effect = {target(JSON)},",
				"          Deleted = NewDeleted,",
				"          DateCreated = NewDateCreated,",
				"          DateModified = NewDateModified,",
				"          DateModifiedTalend = {last_update(CLR)}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4",
				"alterRow1 select(mapColumn(",
				"          StagingId = {id(CLR)},",
				"          Code = {universal_code(CLR)},",
				"          BrandCode = {brand(CLR)},",
				"          VariantCode = {description(VARI)},",
				"          Year = {year(CLR)},",
				"          Name = {color_name(CLR)},",
				"          Use = NewUse,",
				"          Deleted = NewDeleted,",
				"          Effect = {target(JSON)},",
				"          DateModified = NewDateModified,",
				"          DateModifiedTalend = {last_update(CLR)}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select5",
				"stgColor, stgVariant join(stgColor@id == color,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join6",
				"join6 select(mapColumn(",
				"          {id(CLR)} = stgColor@id,",
				"          {originated(CLR)} = stgColor@originated,",
				"          {universal_code(CLR)} = universal_code,",
				"          {color_name(CLR)} = color_name,",
				"          {year(CLR)} = year,",
				"          {version(CLR)} = version,",
				"          {version_date(CLR)} = version_date,",
				"          {brand(CLR)} = brand,",
				"          {effect(CLR)} = effect,",
				"          {density(CLR)} = density,",
				"          {last_update(CLR)} = last_update,",
				"          {id(VARI)} = stgVariant@id,",
				"          {originated(VARI)} = stgVariant@originated,",
				"          {color(VARI)} = color,",
				"          {color_variant(VARI)} = color_variant,",
				"          {description(VARI)} = description",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select6",
				"select6, ICRISstgColor join({id(CLR)} == StagingId,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join7",
				"derivedColumn2 select(mapColumn(",
				"          StagingId,",
				"          NewDeleted,",
				"          NewDateModifiedTalend",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select7",
				"alterRow2 derive(NewDeleted = 'True',",
				"          NewDateModifiedTalend = currentDate('DateModifiedTalend')) ~> derivedColumn2",
				"derivedColumn1 alterRow(updateIf(!isNull({StagingId(ICRISCLR)}) && !isNull({source(JSON)}))) ~> alterRow1",
				"join7 alterRow(deleteIf(isNull({id(CLR)}))) ~> alterRow2",
				"select4 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Id as integer,",
				"          StagingId as string,",
				"          Code as string,",
				"          BrandCode as string,",
				"          VariantCode as string,",
				"          Year as string,",
				"          Name as string,",
				"          Use as boolean,",
				"          Red as integer,",
				"          Green as integer,",
				"          Blue as integer,",
				"          Effect as integer,",
				"          Deleted as boolean,",
				"          DateCreated as timestamp,",
				"          DateModified as timestamp,",
				"          DateModifiedTalend as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          Id,",
				"          StagingId,",
				"          Code,",
				"          BrandCode,",
				"          VariantCode,",
				"          Year,",
				"          Name,",
				"          Use,",
				"          Red,",
				"          Green,",
				"          Blue,",
				"          Effect,",
				"          Deleted,",
				"          DateCreated,",
				"          DateModified,",
				"          DateModifiedTalend",
				"     )) ~> InsertICRISColor",
				"select5 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Id as integer,",
				"          StagingId as string,",
				"          Code as string,",
				"          BrandCode as string,",
				"          VariantCode as string,",
				"          Year as string,",
				"          Name as string,",
				"          Use as boolean,",
				"          Red as integer,",
				"          Green as integer,",
				"          Blue as integer,",
				"          Effect as integer,",
				"          Deleted as boolean,",
				"          DateCreated as timestamp,",
				"          DateModified as timestamp,",
				"          DateModifiedTalend as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 2,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          StagingId,",
				"          Code,",
				"          BrandCode,",
				"          VariantCode,",
				"          Name,",
				"          Effect,",
				"          DateModified,",
				"          DateModifiedTalend",
				"     )) ~> UpdateICRISColor",
				"select7 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Id as integer,",
				"          StagingId as string,",
				"          Code as string,",
				"          BrandCode as string,",
				"          VariantCode as string,",
				"          Year as string,",
				"          Name as string,",
				"          Use as boolean,",
				"          Red as integer,",
				"          Green as integer,",
				"          Blue as integer,",
				"          Effect as integer,",
				"          Deleted as boolean,",
				"          DateCreated as timestamp,",
				"          DateModified as timestamp,",
				"          DateModifiedTalend as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 3,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          StagingId = Id,",
				"          Deleted = NewDeleted,",
				"          DateModifiedTalend = NewDateModifiedTalend",
				"     )) ~> DeleteICRISColor"
			]
		}
	}
}