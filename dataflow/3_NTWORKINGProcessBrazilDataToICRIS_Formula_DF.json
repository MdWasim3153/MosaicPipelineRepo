{
	"name": "3_NTWORKINGProcessBrazilDataToICRIS_Formula_DF",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "stgColor",
						"type": "DatasetReference"
					},
					"name": "stgColor"
				},
				{
					"dataset": {
						"referenceName": "ICRISstgFormula",
						"type": "DatasetReference"
					},
					"name": "ICRISstgFormula"
				},
				{
					"dataset": {
						"referenceName": "stgFormula",
						"type": "DatasetReference"
					},
					"name": "stgFormula"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "stgIngredientTempData",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "JoinOnFormula"
				},
				{
					"name": "joinICRISFormula"
				},
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "select2"
				},
				{
					"name": "select3"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as string,",
				"          originated as string,",
				"          universal_code as string,",
				"          color_name as string,",
				"          year as decimal(4,0),",
				"          version as decimal(4,0),",
				"          version_date as date,",
				"          brand as string,",
				"          effect as string,",
				"          density as decimal(8,4),",
				"          last_update as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> stgColor",
				"source(output(",
				"          Id as integer,",
				"          TalendId as integer,",
				"          ColorId as integer,",
				"          StagingId as string,",
				"          QualityId as string,",
				"          UndercoatCode as string,",
				"          Deleted as boolean,",
				"          DateCreated as timestamp,",
				"          DateModified as timestamp,",
				"          DateModifiedTalend as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ICRISstgFormula",
				"source(output(",
				"          id as decimal(8,0),",
				"          originated as string,",
				"          color as string,",
				"          line as string,",
				"          subline as string,",
				"          undercoat as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> stgFormula",
				"stgColor, stgFormula join(stgColor@id == color,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinOnFormula",
				"select1, ICRISstgFormula join({id(INCLR)} == StagingId,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinICRISFormula",
				"JoinOnFormula select(mapColumn(",
				"          {id(INCLR)} = stgColor@id,",
				"          {originated(INCLR)} = stgColor@originated,",
				"          {universal_code(INCLR)} = universal_code,",
				"          {color_name(INCLR)} = color_name,",
				"          {year(INCLR)} = year,",
				"          {version(INCLR)} = version,",
				"          {version_date(INCLR)} = version_date,",
				"          {brand(INCLR)} = brand,",
				"          {effect(INCLR)} = effect,",
				"          {density(INCLR)} = density,",
				"          {last_update(INCLR)} = last_update,",
				"          {id(INFRM)} = stgFormula@id,",
				"          {originated(INFRM)} = stgFormula@originated,",
				"          {color(INFRM)} = color,",
				"          {line(INFRM)} = line,",
				"          {subline(INFRM)} = subline,",
				"          {undercoat(INFRM)} = undercoat",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select2 derive(newDate_Created = iif(equals(toString({version_date(INCLR)}), '0001-01-01'), '1900-01-01', toString({version_date(INCLR)})),",
				"          newDate_Modified = iif(equals(toString({version_date(INCLR)}), '0001-01-01'),     toDate('1900-01-01'),     {version_date(INCLR)}),",
				"          newId = '0',",
				"          newColorId = '0',",
				"          IfUndercoatIsNull = iif(isNull({undercoat(INFRM)}),'',{undercoat(INFRM)})) ~> derivedColumn1",
				"derivedColumn1 filter(isNull({StagingId(INICRISFRM)})) ~> filter1",
				"joinICRISFormula select(mapColumn(",
				"          {id(INCLR)},",
				"          {originated(INCLR)},",
				"          {universal_code(INCLR)},",
				"          {color_name(INCLR)},",
				"          {year(INCLR)},",
				"          {version(INCLR)},",
				"          {version_date(INCLR)},",
				"          {brand(INCLR)},",
				"          {effect(INCLR)},",
				"          {density(INCLR)},",
				"          {last_update(INCLR)},",
				"          {id(INFRM)},",
				"          {originated(INFRM)},",
				"          {color(INFRM)},",
				"          {line(INFRM)},",
				"          {subline(INFRM)},",
				"          {undercoat(INFRM)},",
				"          {Id(INICRISFRM)} = Id,",
				"          {TalendId(INICRISFRM)} = TalendId,",
				"          {ColorId(INICRISFRM)} = ColorId,",
				"          {StagingId(INICRISFRM)} = StagingId,",
				"          {QualityId(INICRISFRM)} = QualityId,",
				"          {UndercoatCode(INICRISFRM)} = UndercoatCode,",
				"          {Deleted(INICRISFRM)} = Deleted,",
				"          {DateCreated(INICRISFRM)} = DateCreated,",
				"          {DateModified(INICRISFRM)} = DateModified,",
				"          {DateModifiedTalend(INICRISFRM)} = DateModifiedTalend",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"filter1 select(mapColumn(",
				"          Id = newId,",
				"          ColorId = newColorId,",
				"          StagingId = {StagingId(INICRISFRM)},",
				"          QualityId = {QualityId(INICRISFRM)},",
				"          UndercoatCode = IfUndercoatIsNull,",
				"          Deleted = {Deleted(INICRISFRM)},",
				"          Date_Created = newDate_Created,",
				"          Date_Modified = newDate_Modified,",
				"          {DateModifiedTalend(INICRISFRM)} = {last_update(INCLR)}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"select3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Id,",
				"          ColorId,",
				"          StagingId,",
				"          QualityId,",
				"          UndercoatCode,",
				"          Deleted,",
				"          DateCreated = Date_Created,",
				"          DateModified = Date_Modified,",
				"          TalendId,",
				"          DateModifiedTalend = {DateModifiedTalend(INICRISFRM)}",
				"     ),",
				"     format: 'table') ~> sink1"
			]
		}
	}
}